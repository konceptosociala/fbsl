// FBSL Grammar

Shader = _{ SOI ~ 
    (ruleset)* ~ 
    (input)* ~ 
    (function)+ ~ 
EOI }

// Setup rules
ruleset = { "rule" ~ rule ~ semicolon }
rule = { "DEFAULT" | "DEBUG" }

// Input variables
input = { "input" ~ identifier ~ colon ~ type ~ semicolon }

// Variable operations
declaration = { 
	"let " ~ identifier ~ (
    	(colon ~ type | eq ~ value) ~ semicolon | 
        (colon ~ type ~ eq ~ value) ~ semicolon
    ) 
}

equation = { identifier ~ eq ~ assignment ~ semicolon }

operation = { identifier ~ (operator ~ (identifier | value))+ }

comparison = { identifier ~ compare ~ identifier ~ semicolon }

compare = { "==" | "!=" | ">" | "<" | ">=" | "<=" }
operator = { "+" | "-" | "*" | "/" | "%" }
assignment = { operation| identifier | value }

// Function
function = { 
    "function " ~ identifier ~ "(" ~ (
        parameter? ~ (comma ~ parameter)*
    ) ~ ")" ~ ("{" ~
        (declaration | equation | operation | comparison)*
    ~ "}")
}
parameter = { identifier ~ colon ~ type }

call = _{ "" }

// Misc
keyword = { "rule" | "input" | "let" | "if" | "function" | "while" | "for"  }

identifier = ${ !&(keyword ~ !ASCII_ALPHA) ~ ((ASCII_ALPHA | "_" ) ~ (ASCII_ALPHANUMERIC | "_")*) }

type = { 
    "bool" 
    | "u32"
    | "i32" 
    | "f32" 
    | "vec2"
    | "vec3"
    | "vec4" 
    | "string"
    | "texture"
}

bool    = { "true" | "false" }              // false, true
u32     = { ASCII_DIGIT+ }                  // 123
i32     = { u32 | "-" ~ u32 }               // 123, -456
f32     = { i32 ~ "." ~ u32 }               // 123.456, -789.0
string  = { quot ~ (!quot ~ ANY)* ~ quot }  // "hello world"
value   = ${
    bool
    | u32
    | i32
    | f32
    | string
}

comma         = { "," }
eq			  = { "=" }
semicolon     = { ";" }
colon     	  = { ":" }
quot          = _{ QUOTATION_MARK }
line_comment  = _{ ("//" ~ (!NEWLINE ~ ANY)*) }
block_comment = _{ "/*" ~ (block_comment | !"*/" ~ ANY)* ~ "*/" }

COMMENT       = _{ block_comment | line_comment }
WHITESPACE    = _{ " " | "\t" | NEWLINE }
